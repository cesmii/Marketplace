<?xml version="1.0" encoding="utf-8" ?>
<!--<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      internalLogFile="${basedir}\logs\nlogInternal.txt"
      internalLogLevel="Trace"
      throwConfigExceptions="true"
      autoReload="true">-->
<nlog xmlns="http://www.nlog-project.org/schemas/NLog.xsd"
      xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
      internalLogFile="${basedir}\logs\nlogInternal.log"
      internalLogLevel="Trace"
      throwConfigExceptions="true"
      autoReload="true">

    <!-- enable asp.net core layout renderers -->
    <extensions>
        <add assembly="NLog.Web.AspNetCore"/>
        <add assembly="NLog.Mongo"/>
    </extensions>

    <!-- Set connectionString, appName in startup.cs-->
    <!-- the targets to write to -->
    <targets>
        <target name="_logConsole" xsi:type="Console"
                layout="${level:truncate=4:tolower=true}\: ${logger}[0]${newline}      ${message}${exception:format=tostring}" />

        <target name="_logAll" xsi:type="File"
                fileName="${basedir}\logs\${var:appName}-MVC.log"
                layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}" />
        <target name="_logRotate" xsi:type="File"
                fileName="${basedir}\logs\${var:appName}-MVC-Details.log"
                layout="${longdate}|${event-properties:item=EventId_Id:whenEmpty=0}|${uppercase:${level}}|${logger}|${message} ${exception:format=tostring}|url: ${aspnet-request-url}|action: ${aspnet-mvc-action}|${callsite}| body: ${aspnet-request-posted-body}"
                archiveFileName="${basedir}\logs\${var:appName}-MVC-log-{#}.log"
                archiveNumbering="DateAndSequence"
                archiveDateFormat="yyyy-MM-dd"
                archiveAboveSize="1024000"
                maxArchiveFiles="30"
                concurrentWrites="true" />

        <target name="_logFile_DBCommands" xsi:type="File"
                fileName="${basedir}\logs\${var:appName}-MongoDB.log"
                layout="${longdate}|${uppercase:${level}}|${logger}|${newline}${message} ${newline}${newline}"
                archiveFileName="${basedir}\logs\${var:appName}-Sql-{#}.log"
                archiveNumbering="DateAndSequence"
                archiveDateFormat="yyyy-MM-dd"
                archiveAboveSize="102400"
                maxArchiveFiles="2"
                concurrentWrites="true" />

    <target xsi:type="Mongo"
            name="mongoSelfServiceSignUp"
            databaseName="Logging"
            includeDefaults="false"
            connectionString=""
            collectionName="app_log_selfservicesignup"
            cappedCollectionSize="26214400">

      <field name="Date" layout="${date}" bsonType="DateTime" />
      <field name="Level" layout="${level}"/>
      <field name="Message" layout="${message}" />
      <field name="Logger" layout="${logger}"/>
      <field name="Exception" layout="${exception:format=tostring}" />
      <field name="ThreadID" layout="${threadid}" bsonType="Int32" />
      <field name="ThreadName" layout="${threadname}" />
      <field name="ProcessID" layout="${processid}" bsonType="Int32" />
      <field name="ProcessName" layout="${processname:fullName=true}" />

    </target>

    </targets>

    <!-- rules to map from logger name to target -->
    <rules>
        <!--All logs, including from Microsoft-->
      <logger name="*" minlevel="Warn" writeTo="_logAll" />

      <logger name="*" minlevel="Trace" writeTo="mongoSelfServiceSignUp" />

        <!--Output hosting lifetime messages to console target for faster startup detection -->
        <logger name="Microsoft.Hosting.Lifetime" minlevel="Info" writeTo="_logConsole" final="true" />

        <logger name="*" minlevel="Warn" writeTo="_logRotate" />
        <!--Write only warnings and errors to DB to keep table size manageable -->
        <!--Uncomment this if you want to write the queries being executed against the DB to the log table in the DB -->
        <!--
        <logger name="CESMII.Marketplace.Data.Repositories.MongoRepository" minlevel="Trace" writeTo="_logFile_DBCommands" />
        -->

        <!--Skip non-critical Microsoft logs and so log only own logs (BlackHole) -->
        <logger name="Microsoft.*" maxlevel="Info" final="true" />
        <logger name="System.Net.Http.*" maxlevel="Info" final="true" />

    </rules>
</nlog>